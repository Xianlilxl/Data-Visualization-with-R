fill=TRUE,
encoding = "UTF-8")
diplome.master <- read.csv('fr-esr-insertion_professionnelle-master.csv',
header = T,
sep = ';',
fill=TRUE,
encoding = "UTF-8")
academie.lp <- diplome.lp%>%filter(Académie != "")%>%group_by(Académie)%>%summarise(Taux_dinsertion = median(as.numeric(Taux.d.insertion), na.rm = TRUE), Part_femmes = median(as.numeric(X..femmes), na.rm = TRUE), Taux_demplois_cadre = median(as.numeric(X..emplois.cadre), na.rm = TRUE), Taux_demplois_stables = median(as.numeric(X..emplois.stables), na.rm = TRUE), Taux_emploi_temps_plein = median(as.numeric(X..emplois.à.temps.plein), na.rm = TRUE))%>%rename(academie = Académie)%>%bind_cols(Diplome = rep("LP", 30))
academie.master <- diplome.master%>%filter(academie != "")%>%group_by(academie)%>%summarise(Taux_dinsertion = median(as.numeric(taux_dinsertion), na.rm = TRUE), Part_femmes = median(as.numeric(femmes), na.rm = TRUE), Taux_demplois_cadre = median(as.numeric(emplois_cadre), na.rm = TRUE), Taux_demplois_stables = median(as.numeric(emplois_stables), na.rm = TRUE), Taux_emploi_temps_plein = median(as.numeric(emplois_a_temps_plein), na.rm = TRUE))%>%bind_cols(Diplome = rep("Master", 30))
academie.statistiques <- bind_rows(academie.lp, academie.master)
departements <- geojsonio::geojson_read("departements.geojson", what = "sp")
#regions <- geojsonio::geojson_read("regions.geojson", what = "sp")
#class(departements)
#names(departements)
academie <- c("Amiens","Reims","Normandie","Clermont-Ferrand","Orléans-Tours","Rennes","Besançon","Bordeaux","Lyon","Orléans-Tours","Bordeaux","Nancy-Metz","Normandie","Lille","Clermont-Ferrand","Strasbourg","Strasbourg","Normandie","Dijon","Créteil","Aix-Marseille","Aix-Marseille","Grenoble","Reims","Toulouse","Poitiers","Limoges","Bordeaux","Normandie","Orléans-Tours","Montpellier","Dijon","Amiens","Bordeaux","Lyon","Dijon","Paris","Versailles","Toulouse","Toulouse","Nice","Nantes","Limoges","Nancy-Metz","Versailles","Clermont-Ferrand","Nice","Montpellier","Corse","Rennes","Limoges","Besançon","Rennes","Montpellier","Bordeaux","Orléans-Tours","Grenoble","Reims","Reims","Nancy-Metz","Toulouse","Montpellier","Grenoble","Grenoble","Créteil","Aix-Marseille","Poitiers","Créteil","Lyon","Toulouse","Aix-Marseille","Poitiers","Orléans-Tours","Corse","Dijon","Grenoble","Toulouse","Toulouse","Montpellier","Clermont-Ferrand","Nantes","Toulouse","Nantes","Normandie","Rennes","Lille","Besançon","Nantes","Amiens","Versailles","Versailles","Orléans-Tours","Nantes","Nancy-Metz","Poitiers","Besançon")
departements$academie <- academie
require(sp)
?sp::merge
academie.dept <- departements%>%merge(academie.statistiques, by = "academie", duplicateGeoms = TRUE)
m <- leaflet(academie.dept)%>%addTiles("MapBox",
options = providerTileOptions(id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN')))
bins <- c(50, 60,70, 80, 90,100)
pal <- colorBin("YlOrRd", domain = academie.dept$Part_femmes, bins = bins)
labels <- sprintf(
"<strong>%s</strong><br/>%g %",
academie.dept$nom, academie.dept$Part_femmes
) %>% lapply(htmltools::HTML)
library(shiny)
library(leaflet)
library(maptools)
library(rgdal)
library(dplyr)
#france<-readOGR("LIMITE_DEPARTEMENT.shp", p4s = "+proj=longlat")
#mayotte<-readOGR("LIMITE_DEPARTEMENT_MAYOTTE.shp", p4s = "+proj=longlat")
#reunion<-readOGR("LIMITE_DEPARTEMENT_REUNION.shp", p4s = "+proj=longlat")
#guyane<-readOGR("LIMITE_DEPARTEMENT_GUYANE.shp", p4s = "+proj=longlat")
#guadeloupe<-readOGR("LIMITE_DEPARTEMENT_GUADELOUPE.shp", p4s = "+proj=longlat")
#martinique<-readOGR("LIMITE_DEPARTEMENT_MARTINIQUE.shp", p4s = "+proj=longlat")
#plot(france)
#points(2.349,48.853,pch=20,col="red",cex=2)
diplome.lp <- read.csv('fr-esr-insertion_professionnelle-lp.csv',
header = T,
sep = ';',
fill=TRUE,
encoding = "UTF-8")
diplome.master <- read.csv('fr-esr-insertion_professionnelle-master.csv',
header = T,
sep = ';',
fill=TRUE,
encoding = "UTF-8")
academie.lp <- diplome.lp%>%filter(Académie != "")%>%group_by(Académie)%>%summarise(Taux_dinsertion = median(as.numeric(Taux.d.insertion), na.rm = TRUE), Part_femmes = median(as.numeric(X..femmes), na.rm = TRUE), Taux_demplois_cadre = median(as.numeric(X..emplois.cadre), na.rm = TRUE), Taux_demplois_stables = median(as.numeric(X..emplois.stables), na.rm = TRUE), Taux_emploi_temps_plein = median(as.numeric(X..emplois.à.temps.plein), na.rm = TRUE))%>%rename(academie = Académie)%>%bind_cols(Diplome = rep("LP", 30))
academie.master <- diplome.master%>%filter(academie != "")%>%group_by(academie)%>%summarise(Taux_dinsertion = median(as.numeric(taux_dinsertion), na.rm = TRUE), Part_femmes = median(as.numeric(femmes), na.rm = TRUE), Taux_demplois_cadre = median(as.numeric(emplois_cadre), na.rm = TRUE), Taux_demplois_stables = median(as.numeric(emplois_stables), na.rm = TRUE), Taux_emploi_temps_plein = median(as.numeric(emplois_a_temps_plein), na.rm = TRUE))%>%bind_cols(Diplome = rep("Master", 30))
academie.statistiques <- bind_rows(academie.lp, academie.master)
departements <- geojsonio::geojson_read("departements.geojson", what = "sp")
#regions <- geojsonio::geojson_read("regions.geojson", what = "sp")
#class(departements)
#names(departements)
academie <- c("Amiens","Reims","Normandie","Clermont-Ferrand","Orléans-Tours","Rennes","Besançon","Bordeaux","Lyon","Orléans-Tours","Bordeaux","Nancy-Metz","Normandie","Lille","Clermont-Ferrand","Strasbourg","Strasbourg","Normandie","Dijon","Créteil","Aix-Marseille","Aix-Marseille","Grenoble","Reims","Toulouse","Poitiers","Limoges","Bordeaux","Normandie","Orléans-Tours","Montpellier","Dijon","Amiens","Bordeaux","Lyon","Dijon","Paris","Versailles","Toulouse","Toulouse","Nice","Nantes","Limoges","Nancy-Metz","Versailles","Clermont-Ferrand","Nice","Montpellier","Corse","Rennes","Limoges","Besançon","Rennes","Montpellier","Bordeaux","Orléans-Tours","Grenoble","Reims","Reims","Nancy-Metz","Toulouse","Montpellier","Grenoble","Grenoble","Créteil","Aix-Marseille","Poitiers","Créteil","Lyon","Toulouse","Aix-Marseille","Poitiers","Orléans-Tours","Corse","Dijon","Grenoble","Toulouse","Toulouse","Montpellier","Clermont-Ferrand","Nantes","Toulouse","Nantes","Normandie","Rennes","Lille","Besançon","Nantes","Amiens","Versailles","Versailles","Orléans-Tours","Nantes","Nancy-Metz","Poitiers","Besançon")
departements$academie <- academie
require(sp)
?sp::merge
academie.dept <- departements%>%merge(academie.statistiques, by = "academie", duplicateGeoms = TRUE)
m <- leaflet(academie.dept)%>%addTiles("MapBox",
options = providerTileOptions(id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN')))
bins <- c(50, 60,70, 80, 90,100)
pal <- colorBin("YlOrRd", domain = academie.dept$Part_femmes, bins = bins)
labels <- sprintf(
"<strong>%s</strong><br/>%g <string>%</string>",
academie.dept$nom, academie.dept$Part_femmes
) %>% lapply(htmltools::HTML)
library(shiny)
library(leaflet)
library(maptools)
library(rgdal)
library(dplyr)
#france<-readOGR("LIMITE_DEPARTEMENT.shp", p4s = "+proj=longlat")
#mayotte<-readOGR("LIMITE_DEPARTEMENT_MAYOTTE.shp", p4s = "+proj=longlat")
#reunion<-readOGR("LIMITE_DEPARTEMENT_REUNION.shp", p4s = "+proj=longlat")
#guyane<-readOGR("LIMITE_DEPARTEMENT_GUYANE.shp", p4s = "+proj=longlat")
#guadeloupe<-readOGR("LIMITE_DEPARTEMENT_GUADELOUPE.shp", p4s = "+proj=longlat")
#martinique<-readOGR("LIMITE_DEPARTEMENT_MARTINIQUE.shp", p4s = "+proj=longlat")
#plot(france)
#points(2.349,48.853,pch=20,col="red",cex=2)
diplome.lp <- read.csv('fr-esr-insertion_professionnelle-lp.csv',
header = T,
sep = ';',
fill=TRUE,
encoding = "UTF-8")
diplome.master <- read.csv('fr-esr-insertion_professionnelle-master.csv',
header = T,
sep = ';',
fill=TRUE,
encoding = "UTF-8")
academie.lp <- diplome.lp%>%filter(Académie != "")%>%group_by(Académie)%>%summarise(Taux_dinsertion = median(as.numeric(Taux.d.insertion), na.rm = TRUE), Part_femmes = median(as.numeric(X..femmes), na.rm = TRUE), Taux_demplois_cadre = median(as.numeric(X..emplois.cadre), na.rm = TRUE), Taux_demplois_stables = median(as.numeric(X..emplois.stables), na.rm = TRUE), Taux_emploi_temps_plein = median(as.numeric(X..emplois.à.temps.plein), na.rm = TRUE))%>%rename(academie = Académie)%>%bind_cols(Diplome = rep("LP", 30))
academie.master <- diplome.master%>%filter(academie != "")%>%group_by(academie)%>%summarise(Taux_dinsertion = median(as.numeric(taux_dinsertion), na.rm = TRUE), Part_femmes = median(as.numeric(femmes), na.rm = TRUE), Taux_demplois_cadre = median(as.numeric(emplois_cadre), na.rm = TRUE), Taux_demplois_stables = median(as.numeric(emplois_stables), na.rm = TRUE), Taux_emploi_temps_plein = median(as.numeric(emplois_a_temps_plein), na.rm = TRUE))%>%bind_cols(Diplome = rep("Master", 30))
academie.statistiques <- bind_rows(academie.lp, academie.master)
departements <- geojsonio::geojson_read("departements.geojson", what = "sp")
#regions <- geojsonio::geojson_read("regions.geojson", what = "sp")
#class(departements)
#names(departements)
academie <- c("Amiens","Reims","Normandie","Clermont-Ferrand","Orléans-Tours","Rennes","Besançon","Bordeaux","Lyon","Orléans-Tours","Bordeaux","Nancy-Metz","Normandie","Lille","Clermont-Ferrand","Strasbourg","Strasbourg","Normandie","Dijon","Créteil","Aix-Marseille","Aix-Marseille","Grenoble","Reims","Toulouse","Poitiers","Limoges","Bordeaux","Normandie","Orléans-Tours","Montpellier","Dijon","Amiens","Bordeaux","Lyon","Dijon","Paris","Versailles","Toulouse","Toulouse","Nice","Nantes","Limoges","Nancy-Metz","Versailles","Clermont-Ferrand","Nice","Montpellier","Corse","Rennes","Limoges","Besançon","Rennes","Montpellier","Bordeaux","Orléans-Tours","Grenoble","Reims","Reims","Nancy-Metz","Toulouse","Montpellier","Grenoble","Grenoble","Créteil","Aix-Marseille","Poitiers","Créteil","Lyon","Toulouse","Aix-Marseille","Poitiers","Orléans-Tours","Corse","Dijon","Grenoble","Toulouse","Toulouse","Montpellier","Clermont-Ferrand","Nantes","Toulouse","Nantes","Normandie","Rennes","Lille","Besançon","Nantes","Amiens","Versailles","Versailles","Orléans-Tours","Nantes","Nancy-Metz","Poitiers","Besançon")
departements$academie <- academie
require(sp)
?sp::merge
academie.dept <- departements%>%merge(academie.statistiques, by = "academie", duplicateGeoms = TRUE)
m <- leaflet(academie.dept)%>%addTiles("MapBox",
options = providerTileOptions(id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN')))
bins <- c(50, 60,70, 80, 90,100)
pal <- colorBin("YlOrRd", domain = academie.dept$Part_femmes, bins = bins)
labels <- sprintf(
"<strong>%s</strong><br/>%g %<sup>2</sup>",
academie.dept$nom, academie.dept$Part_femmes
) %>% lapply(htmltools::HTML)
library(shiny)
library(leaflet)
library(maptools)
library(rgdal)
library(dplyr)
#france<-readOGR("LIMITE_DEPARTEMENT.shp", p4s = "+proj=longlat")
#mayotte<-readOGR("LIMITE_DEPARTEMENT_MAYOTTE.shp", p4s = "+proj=longlat")
#reunion<-readOGR("LIMITE_DEPARTEMENT_REUNION.shp", p4s = "+proj=longlat")
#guyane<-readOGR("LIMITE_DEPARTEMENT_GUYANE.shp", p4s = "+proj=longlat")
#guadeloupe<-readOGR("LIMITE_DEPARTEMENT_GUADELOUPE.shp", p4s = "+proj=longlat")
#martinique<-readOGR("LIMITE_DEPARTEMENT_MARTINIQUE.shp", p4s = "+proj=longlat")
#plot(france)
#points(2.349,48.853,pch=20,col="red",cex=2)
diplome.lp <- read.csv('fr-esr-insertion_professionnelle-lp.csv',
header = T,
sep = ';',
fill=TRUE,
encoding = "UTF-8")
diplome.master <- read.csv('fr-esr-insertion_professionnelle-master.csv',
header = T,
sep = ';',
fill=TRUE,
encoding = "UTF-8")
academie.lp <- diplome.lp%>%filter(Académie != "")%>%group_by(Académie)%>%summarise(Taux_dinsertion = median(as.numeric(Taux.d.insertion), na.rm = TRUE), Part_femmes = median(as.numeric(X..femmes), na.rm = TRUE), Taux_demplois_cadre = median(as.numeric(X..emplois.cadre), na.rm = TRUE), Taux_demplois_stables = median(as.numeric(X..emplois.stables), na.rm = TRUE), Taux_emploi_temps_plein = median(as.numeric(X..emplois.à.temps.plein), na.rm = TRUE))%>%rename(academie = Académie)%>%bind_cols(Diplome = rep("LP", 30))
academie.master <- diplome.master%>%filter(academie != "")%>%group_by(academie)%>%summarise(Taux_dinsertion = median(as.numeric(taux_dinsertion), na.rm = TRUE), Part_femmes = median(as.numeric(femmes), na.rm = TRUE), Taux_demplois_cadre = median(as.numeric(emplois_cadre), na.rm = TRUE), Taux_demplois_stables = median(as.numeric(emplois_stables), na.rm = TRUE), Taux_emploi_temps_plein = median(as.numeric(emplois_a_temps_plein), na.rm = TRUE))%>%bind_cols(Diplome = rep("Master", 30))
academie.statistiques <- bind_rows(academie.lp, academie.master)
departements <- geojsonio::geojson_read("departements.geojson", what = "sp")
#regions <- geojsonio::geojson_read("regions.geojson", what = "sp")
#class(departements)
#names(departements)
academie <- c("Amiens","Reims","Normandie","Clermont-Ferrand","Orléans-Tours","Rennes","Besançon","Bordeaux","Lyon","Orléans-Tours","Bordeaux","Nancy-Metz","Normandie","Lille","Clermont-Ferrand","Strasbourg","Strasbourg","Normandie","Dijon","Créteil","Aix-Marseille","Aix-Marseille","Grenoble","Reims","Toulouse","Poitiers","Limoges","Bordeaux","Normandie","Orléans-Tours","Montpellier","Dijon","Amiens","Bordeaux","Lyon","Dijon","Paris","Versailles","Toulouse","Toulouse","Nice","Nantes","Limoges","Nancy-Metz","Versailles","Clermont-Ferrand","Nice","Montpellier","Corse","Rennes","Limoges","Besançon","Rennes","Montpellier","Bordeaux","Orléans-Tours","Grenoble","Reims","Reims","Nancy-Metz","Toulouse","Montpellier","Grenoble","Grenoble","Créteil","Aix-Marseille","Poitiers","Créteil","Lyon","Toulouse","Aix-Marseille","Poitiers","Orléans-Tours","Corse","Dijon","Grenoble","Toulouse","Toulouse","Montpellier","Clermont-Ferrand","Nantes","Toulouse","Nantes","Normandie","Rennes","Lille","Besançon","Nantes","Amiens","Versailles","Versailles","Orléans-Tours","Nantes","Nancy-Metz","Poitiers","Besançon")
departements$academie <- academie
require(sp)
?sp::merge
academie.dept <- departements%>%merge(academie.statistiques, by = "academie", duplicateGeoms = TRUE)
m <- leaflet(academie.dept)%>%addTiles("MapBox",
options = providerTileOptions(id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN')))
bins <- c(50, 60,70, 80, 90,100)
pal <- colorBin("YlOrRd", domain = academie.dept$Part_femmes, bins = bins)
labels <- sprintf(
"<strong>%s</strong><br/>%g <sup>2</sup>",
academie.dept$nom, academie.dept$Part_femmes
) %>% lapply(htmltools::HTML)
m %>% addPolygons(fillColor = ~pal(Part_femmes),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
library(shiny)
library(leaflet)
library(maptools)
library(rgdal)
library(dplyr)
#france<-readOGR("LIMITE_DEPARTEMENT.shp", p4s = "+proj=longlat")
#mayotte<-readOGR("LIMITE_DEPARTEMENT_MAYOTTE.shp", p4s = "+proj=longlat")
#reunion<-readOGR("LIMITE_DEPARTEMENT_REUNION.shp", p4s = "+proj=longlat")
#guyane<-readOGR("LIMITE_DEPARTEMENT_GUYANE.shp", p4s = "+proj=longlat")
#guadeloupe<-readOGR("LIMITE_DEPARTEMENT_GUADELOUPE.shp", p4s = "+proj=longlat")
#martinique<-readOGR("LIMITE_DEPARTEMENT_MARTINIQUE.shp", p4s = "+proj=longlat")
#plot(france)
#points(2.349,48.853,pch=20,col="red",cex=2)
diplome.lp <- read.csv('fr-esr-insertion_professionnelle-lp.csv',
header = T,
sep = ';',
fill=TRUE,
encoding = "UTF-8")
diplome.master <- read.csv('fr-esr-insertion_professionnelle-master.csv',
header = T,
sep = ';',
fill=TRUE,
encoding = "UTF-8")
academie.lp <- diplome.lp%>%filter(Académie != "")%>%group_by(Académie)%>%summarise(Taux_dinsertion = median(as.numeric(Taux.d.insertion), na.rm = TRUE), Part_femmes = median(as.numeric(X..femmes), na.rm = TRUE), Taux_demplois_cadre = median(as.numeric(X..emplois.cadre), na.rm = TRUE), Taux_demplois_stables = median(as.numeric(X..emplois.stables), na.rm = TRUE), Taux_emploi_temps_plein = median(as.numeric(X..emplois.à.temps.plein), na.rm = TRUE))%>%rename(academie = Académie)%>%bind_cols(Diplome = rep("LP", 30))
academie.master <- diplome.master%>%filter(academie != "")%>%group_by(academie)%>%summarise(Taux_dinsertion = median(as.numeric(taux_dinsertion), na.rm = TRUE), Part_femmes = median(as.numeric(femmes), na.rm = TRUE), Taux_demplois_cadre = median(as.numeric(emplois_cadre), na.rm = TRUE), Taux_demplois_stables = median(as.numeric(emplois_stables), na.rm = TRUE), Taux_emploi_temps_plein = median(as.numeric(emplois_a_temps_plein), na.rm = TRUE))%>%bind_cols(Diplome = rep("Master", 30))
academie.statistiques <- bind_rows(academie.lp, academie.master)
departements <- geojsonio::geojson_read("departements.geojson", what = "sp")
#regions <- geojsonio::geojson_read("regions.geojson", what = "sp")
#class(departements)
#names(departements)
academie <- c("Amiens","Reims","Normandie","Clermont-Ferrand","Orléans-Tours","Rennes","Besançon","Bordeaux","Lyon","Orléans-Tours","Bordeaux","Nancy-Metz","Normandie","Lille","Clermont-Ferrand","Strasbourg","Strasbourg","Normandie","Dijon","Créteil","Aix-Marseille","Aix-Marseille","Grenoble","Reims","Toulouse","Poitiers","Limoges","Bordeaux","Normandie","Orléans-Tours","Montpellier","Dijon","Amiens","Bordeaux","Lyon","Dijon","Paris","Versailles","Toulouse","Toulouse","Nice","Nantes","Limoges","Nancy-Metz","Versailles","Clermont-Ferrand","Nice","Montpellier","Corse","Rennes","Limoges","Besançon","Rennes","Montpellier","Bordeaux","Orléans-Tours","Grenoble","Reims","Reims","Nancy-Metz","Toulouse","Montpellier","Grenoble","Grenoble","Créteil","Aix-Marseille","Poitiers","Créteil","Lyon","Toulouse","Aix-Marseille","Poitiers","Orléans-Tours","Corse","Dijon","Grenoble","Toulouse","Toulouse","Montpellier","Clermont-Ferrand","Nantes","Toulouse","Nantes","Normandie","Rennes","Lille","Besançon","Nantes","Amiens","Versailles","Versailles","Orléans-Tours","Nantes","Nancy-Metz","Poitiers","Besançon")
departements$academie <- academie
require(sp)
?sp::merge
academie.dept <- departements%>%merge(academie.statistiques, by = "academie", duplicateGeoms = TRUE)
m <- leaflet(academie.dept)%>%addTiles("MapBox",
options = providerTileOptions(id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN')))
bins <- c(50, 60,70, 80, 90,100)
pal <- colorBin("YlOrRd", domain = academie.dept$Part_femmes, bins = bins)
labels <- sprintf(
"<strong>%s</strong><br/>%g <strong>%</strong>",
academie.dept$nom, academie.dept$Part_femmes
) %>% lapply(htmltools::HTML)
library(shiny)
library(leaflet)
library(maptools)
library(rgdal)
library(dplyr)
#france<-readOGR("LIMITE_DEPARTEMENT.shp", p4s = "+proj=longlat")
#mayotte<-readOGR("LIMITE_DEPARTEMENT_MAYOTTE.shp", p4s = "+proj=longlat")
#reunion<-readOGR("LIMITE_DEPARTEMENT_REUNION.shp", p4s = "+proj=longlat")
#guyane<-readOGR("LIMITE_DEPARTEMENT_GUYANE.shp", p4s = "+proj=longlat")
#guadeloupe<-readOGR("LIMITE_DEPARTEMENT_GUADELOUPE.shp", p4s = "+proj=longlat")
#martinique<-readOGR("LIMITE_DEPARTEMENT_MARTINIQUE.shp", p4s = "+proj=longlat")
#plot(france)
#points(2.349,48.853,pch=20,col="red",cex=2)
diplome.lp <- read.csv('fr-esr-insertion_professionnelle-lp.csv',
header = T,
sep = ';',
fill=TRUE,
encoding = "UTF-8")
diplome.master <- read.csv('fr-esr-insertion_professionnelle-master.csv',
header = T,
sep = ';',
fill=TRUE,
encoding = "UTF-8")
academie.lp <- diplome.lp%>%filter(Académie != "")%>%group_by(Académie)%>%summarise(Taux_dinsertion = median(as.numeric(Taux.d.insertion), na.rm = TRUE), Part_femmes = median(as.numeric(X..femmes), na.rm = TRUE), Taux_demplois_cadre = median(as.numeric(X..emplois.cadre), na.rm = TRUE), Taux_demplois_stables = median(as.numeric(X..emplois.stables), na.rm = TRUE), Taux_emploi_temps_plein = median(as.numeric(X..emplois.à.temps.plein), na.rm = TRUE))%>%rename(academie = Académie)%>%bind_cols(Diplome = rep("LP", 30))
academie.master <- diplome.master%>%filter(academie != "")%>%group_by(academie)%>%summarise(Taux_dinsertion = median(as.numeric(taux_dinsertion), na.rm = TRUE), Part_femmes = median(as.numeric(femmes), na.rm = TRUE), Taux_demplois_cadre = median(as.numeric(emplois_cadre), na.rm = TRUE), Taux_demplois_stables = median(as.numeric(emplois_stables), na.rm = TRUE), Taux_emploi_temps_plein = median(as.numeric(emplois_a_temps_plein), na.rm = TRUE))%>%bind_cols(Diplome = rep("Master", 30))
academie.statistiques <- bind_rows(academie.lp, academie.master)
departements <- geojsonio::geojson_read("departements.geojson", what = "sp")
#regions <- geojsonio::geojson_read("regions.geojson", what = "sp")
#class(departements)
#names(departements)
academie <- c("Amiens","Reims","Normandie","Clermont-Ferrand","Orléans-Tours","Rennes","Besançon","Bordeaux","Lyon","Orléans-Tours","Bordeaux","Nancy-Metz","Normandie","Lille","Clermont-Ferrand","Strasbourg","Strasbourg","Normandie","Dijon","Créteil","Aix-Marseille","Aix-Marseille","Grenoble","Reims","Toulouse","Poitiers","Limoges","Bordeaux","Normandie","Orléans-Tours","Montpellier","Dijon","Amiens","Bordeaux","Lyon","Dijon","Paris","Versailles","Toulouse","Toulouse","Nice","Nantes","Limoges","Nancy-Metz","Versailles","Clermont-Ferrand","Nice","Montpellier","Corse","Rennes","Limoges","Besançon","Rennes","Montpellier","Bordeaux","Orléans-Tours","Grenoble","Reims","Reims","Nancy-Metz","Toulouse","Montpellier","Grenoble","Grenoble","Créteil","Aix-Marseille","Poitiers","Créteil","Lyon","Toulouse","Aix-Marseille","Poitiers","Orléans-Tours","Corse","Dijon","Grenoble","Toulouse","Toulouse","Montpellier","Clermont-Ferrand","Nantes","Toulouse","Nantes","Normandie","Rennes","Lille","Besançon","Nantes","Amiens","Versailles","Versailles","Orléans-Tours","Nantes","Nancy-Metz","Poitiers","Besançon")
departements$academie <- academie
require(sp)
?sp::merge
academie.dept <- departements%>%merge(academie.statistiques, by = "academie", duplicateGeoms = TRUE)
m <- leaflet(academie.dept)%>%addTiles("MapBox",
options = providerTileOptions(id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN')))
bins <- c(50, 60,70, 80, 90,100)
pal <- colorBin("YlOrRd", domain = academie.dept$Part_femmes, bins = bins)
labels <- sprintf(
"<strong>%s</strong><br/>%g <strong>pourcent</strong>",
academie.dept$nom, academie.dept$Part_femmes
) %>% lapply(htmltools::HTML)
m %>% addPolygons(fillColor = ~pal(Part_femmes),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
library(shiny)
library(leaflet)
library(maptools)
library(rgdal)
library(dplyr)
#france<-readOGR("LIMITE_DEPARTEMENT.shp", p4s = "+proj=longlat")
#mayotte<-readOGR("LIMITE_DEPARTEMENT_MAYOTTE.shp", p4s = "+proj=longlat")
#reunion<-readOGR("LIMITE_DEPARTEMENT_REUNION.shp", p4s = "+proj=longlat")
#guyane<-readOGR("LIMITE_DEPARTEMENT_GUYANE.shp", p4s = "+proj=longlat")
#guadeloupe<-readOGR("LIMITE_DEPARTEMENT_GUADELOUPE.shp", p4s = "+proj=longlat")
#martinique<-readOGR("LIMITE_DEPARTEMENT_MARTINIQUE.shp", p4s = "+proj=longlat")
#plot(france)
#points(2.349,48.853,pch=20,col="red",cex=2)
diplome.lp <- read.csv('fr-esr-insertion_professionnelle-lp.csv',
header = T,
sep = ';',
fill=TRUE,
encoding = "UTF-8")
diplome.master <- read.csv('fr-esr-insertion_professionnelle-master.csv',
header = T,
sep = ';',
fill=TRUE,
encoding = "UTF-8")
academie.lp <- diplome.lp%>%filter(Académie != "")%>%group_by(Académie)%>%summarise(Taux_dinsertion = median(as.numeric(Taux.d.insertion), na.rm = TRUE), Part_femmes = median(as.numeric(X..femmes), na.rm = TRUE), Taux_demplois_cadre = median(as.numeric(X..emplois.cadre), na.rm = TRUE), Taux_demplois_stables = median(as.numeric(X..emplois.stables), na.rm = TRUE), Taux_emploi_temps_plein = median(as.numeric(X..emplois.à.temps.plein), na.rm = TRUE))%>%rename(academie = Académie)%>%bind_cols(Diplome = rep("LP", 30))
academie.master <- diplome.master%>%filter(academie != "")%>%group_by(academie)%>%summarise(Taux_dinsertion = median(as.numeric(taux_dinsertion), na.rm = TRUE), Part_femmes = median(as.numeric(femmes), na.rm = TRUE), Taux_demplois_cadre = median(as.numeric(emplois_cadre), na.rm = TRUE), Taux_demplois_stables = median(as.numeric(emplois_stables), na.rm = TRUE), Taux_emploi_temps_plein = median(as.numeric(emplois_a_temps_plein), na.rm = TRUE))%>%bind_cols(Diplome = rep("Master", 30))
academie.statistiques <- bind_rows(academie.lp, academie.master)
departements <- geojsonio::geojson_read("departements.geojson", what = "sp")
#regions <- geojsonio::geojson_read("regions.geojson", what = "sp")
#class(departements)
#names(departements)
academie <- c("Amiens","Reims","Normandie","Clermont-Ferrand","Orléans-Tours","Rennes","Besançon","Bordeaux","Lyon","Orléans-Tours","Bordeaux","Nancy-Metz","Normandie","Lille","Clermont-Ferrand","Strasbourg","Strasbourg","Normandie","Dijon","Créteil","Aix-Marseille","Aix-Marseille","Grenoble","Reims","Toulouse","Poitiers","Limoges","Bordeaux","Normandie","Orléans-Tours","Montpellier","Dijon","Amiens","Bordeaux","Lyon","Dijon","Paris","Versailles","Toulouse","Toulouse","Nice","Nantes","Limoges","Nancy-Metz","Versailles","Clermont-Ferrand","Nice","Montpellier","Corse","Rennes","Limoges","Besançon","Rennes","Montpellier","Bordeaux","Orléans-Tours","Grenoble","Reims","Reims","Nancy-Metz","Toulouse","Montpellier","Grenoble","Grenoble","Créteil","Aix-Marseille","Poitiers","Créteil","Lyon","Toulouse","Aix-Marseille","Poitiers","Orléans-Tours","Corse","Dijon","Grenoble","Toulouse","Toulouse","Montpellier","Clermont-Ferrand","Nantes","Toulouse","Nantes","Normandie","Rennes","Lille","Besançon","Nantes","Amiens","Versailles","Versailles","Orléans-Tours","Nantes","Nancy-Metz","Poitiers","Besançon")
departements$academie <- academie
require(sp)
?sp::merge
academie.dept <- departements%>%merge(academie.statistiques, by = "academie", duplicateGeoms = TRUE)
m <- leaflet(academie.dept)%>%addTiles("MapBox",
options = providerTileOptions(id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN')))
bins <- c(50, 60,70, 80, 90,100)
pal <- colorBin("YlOrRd", domain = academie.dept$Part_femmes, bins = bins)
labels <- sprintf(
"<strong>%s</strong><br/>%g \%",
library(shiny)
library(leaflet)
library(maptools)
library(rgdal)
library(dplyr)
#france<-readOGR("LIMITE_DEPARTEMENT.shp", p4s = "+proj=longlat")
#mayotte<-readOGR("LIMITE_DEPARTEMENT_MAYOTTE.shp", p4s = "+proj=longlat")
#reunion<-readOGR("LIMITE_DEPARTEMENT_REUNION.shp", p4s = "+proj=longlat")
#guyane<-readOGR("LIMITE_DEPARTEMENT_GUYANE.shp", p4s = "+proj=longlat")
#guadeloupe<-readOGR("LIMITE_DEPARTEMENT_GUADELOUPE.shp", p4s = "+proj=longlat")
#martinique<-readOGR("LIMITE_DEPARTEMENT_MARTINIQUE.shp", p4s = "+proj=longlat")
#plot(france)
#points(2.349,48.853,pch=20,col="red",cex=2)
diplome.lp <- read.csv('fr-esr-insertion_professionnelle-lp.csv',
header = T,
sep = ';',
fill=TRUE,
encoding = "UTF-8")
diplome.master <- read.csv('fr-esr-insertion_professionnelle-master.csv',
header = T,
sep = ';',
fill=TRUE,
encoding = "UTF-8")
academie.lp <- diplome.lp%>%filter(Académie != "")%>%group_by(Académie)%>%summarise(Taux_dinsertion = median(as.numeric(Taux.d.insertion), na.rm = TRUE), Part_femmes = median(as.numeric(X..femmes), na.rm = TRUE), Taux_demplois_cadre = median(as.numeric(X..emplois.cadre), na.rm = TRUE), Taux_demplois_stables = median(as.numeric(X..emplois.stables), na.rm = TRUE), Taux_emploi_temps_plein = median(as.numeric(X..emplois.à.temps.plein), na.rm = TRUE))%>%rename(academie = Académie)%>%bind_cols(Diplome = rep("LP", 30))
academie.master <- diplome.master%>%filter(academie != "")%>%group_by(academie)%>%summarise(Taux_dinsertion = median(as.numeric(taux_dinsertion), na.rm = TRUE), Part_femmes = median(as.numeric(femmes), na.rm = TRUE), Taux_demplois_cadre = median(as.numeric(emplois_cadre), na.rm = TRUE), Taux_demplois_stables = median(as.numeric(emplois_stables), na.rm = TRUE), Taux_emploi_temps_plein = median(as.numeric(emplois_a_temps_plein), na.rm = TRUE))%>%bind_cols(Diplome = rep("Master", 30))
academie.statistiques <- bind_rows(academie.lp, academie.master)
departements <- geojsonio::geojson_read("departements.geojson", what = "sp")
#regions <- geojsonio::geojson_read("regions.geojson", what = "sp")
#class(departements)
#names(departements)
academie <- c("Amiens","Reims","Normandie","Clermont-Ferrand","Orléans-Tours","Rennes","Besançon","Bordeaux","Lyon","Orléans-Tours","Bordeaux","Nancy-Metz","Normandie","Lille","Clermont-Ferrand","Strasbourg","Strasbourg","Normandie","Dijon","Créteil","Aix-Marseille","Aix-Marseille","Grenoble","Reims","Toulouse","Poitiers","Limoges","Bordeaux","Normandie","Orléans-Tours","Montpellier","Dijon","Amiens","Bordeaux","Lyon","Dijon","Paris","Versailles","Toulouse","Toulouse","Nice","Nantes","Limoges","Nancy-Metz","Versailles","Clermont-Ferrand","Nice","Montpellier","Corse","Rennes","Limoges","Besançon","Rennes","Montpellier","Bordeaux","Orléans-Tours","Grenoble","Reims","Reims","Nancy-Metz","Toulouse","Montpellier","Grenoble","Grenoble","Créteil","Aix-Marseille","Poitiers","Créteil","Lyon","Toulouse","Aix-Marseille","Poitiers","Orléans-Tours","Corse","Dijon","Grenoble","Toulouse","Toulouse","Montpellier","Clermont-Ferrand","Nantes","Toulouse","Nantes","Normandie","Rennes","Lille","Besançon","Nantes","Amiens","Versailles","Versailles","Orléans-Tours","Nantes","Nancy-Metz","Poitiers","Besançon")
departements$academie <- academie
require(sp)
?sp::merge
academie.dept <- departements%>%merge(academie.statistiques, by = "academie", duplicateGeoms = TRUE)
m <- leaflet(academie.dept)%>%addTiles("MapBox",
options = providerTileOptions(id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN')))
bins <- c(50, 60,70, 80, 90,100)
pal <- colorBin("YlOrRd", domain = academie.dept$Part_femmes, bins = bins)
labels <- sprintf(
"<strong>%s</strong><br/>%g pourcent",
academie.dept$nom, academie.dept$Part_femmes
) %>% lapply(htmltools::HTML)
m %>% addPolygons(fillColor = ~pal(Part_femmes),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
library(shiny)
library(leaflet)
library(maptools)
library(rgdal)
library(dplyr)
#france<-readOGR("LIMITE_DEPARTEMENT.shp", p4s = "+proj=longlat")
#mayotte<-readOGR("LIMITE_DEPARTEMENT_MAYOTTE.shp", p4s = "+proj=longlat")
#reunion<-readOGR("LIMITE_DEPARTEMENT_REUNION.shp", p4s = "+proj=longlat")
#guyane<-readOGR("LIMITE_DEPARTEMENT_GUYANE.shp", p4s = "+proj=longlat")
#guadeloupe<-readOGR("LIMITE_DEPARTEMENT_GUADELOUPE.shp", p4s = "+proj=longlat")
#martinique<-readOGR("LIMITE_DEPARTEMENT_MARTINIQUE.shp", p4s = "+proj=longlat")
#plot(france)
#points(2.349,48.853,pch=20,col="red",cex=2)
diplome.lp <- read.csv('fr-esr-insertion_professionnelle-lp.csv',
header = T,
sep = ';',
fill=TRUE,
encoding = "UTF-8")
diplome.master <- read.csv('fr-esr-insertion_professionnelle-master.csv',
header = T,
sep = ';',
fill=TRUE,
encoding = "UTF-8")
academie.lp <- diplome.lp%>%filter(Académie != "")%>%group_by(Académie)%>%summarise(Taux_dinsertion = median(as.numeric(Taux.d.insertion), na.rm = TRUE), Part_femmes = median(as.numeric(X..femmes), na.rm = TRUE), Taux_demplois_cadre = median(as.numeric(X..emplois.cadre), na.rm = TRUE), Taux_demplois_stables = median(as.numeric(X..emplois.stables), na.rm = TRUE), Taux_emploi_temps_plein = median(as.numeric(X..emplois.à.temps.plein), na.rm = TRUE))%>%rename(academie = Académie)%>%bind_cols(Diplome = rep("LP", 30))
academie.master <- diplome.master%>%filter(academie != "")%>%group_by(academie)%>%summarise(Taux_dinsertion = median(as.numeric(taux_dinsertion), na.rm = TRUE), Part_femmes = median(as.numeric(femmes), na.rm = TRUE), Taux_demplois_cadre = median(as.numeric(emplois_cadre), na.rm = TRUE), Taux_demplois_stables = median(as.numeric(emplois_stables), na.rm = TRUE), Taux_emploi_temps_plein = median(as.numeric(emplois_a_temps_plein), na.rm = TRUE))%>%bind_cols(Diplome = rep("Master", 30))
academie.statistiques <- bind_rows(academie.lp, academie.master)
departements <- geojsonio::geojson_read("departements.geojson", what = "sp")
#regions <- geojsonio::geojson_read("regions.geojson", what = "sp")
#class(departements)
#names(departements)
academie <- c("Amiens","Reims","Normandie","Clermont-Ferrand","Orléans-Tours","Rennes","Besançon","Bordeaux","Lyon","Orléans-Tours","Bordeaux","Nancy-Metz","Normandie","Lille","Clermont-Ferrand","Strasbourg","Strasbourg","Normandie","Dijon","Créteil","Aix-Marseille","Aix-Marseille","Grenoble","Reims","Toulouse","Poitiers","Limoges","Bordeaux","Normandie","Orléans-Tours","Montpellier","Dijon","Amiens","Bordeaux","Lyon","Dijon","Paris","Versailles","Toulouse","Toulouse","Nice","Nantes","Limoges","Nancy-Metz","Versailles","Clermont-Ferrand","Nice","Montpellier","Corse","Rennes","Limoges","Besançon","Rennes","Montpellier","Bordeaux","Orléans-Tours","Grenoble","Reims","Reims","Nancy-Metz","Toulouse","Montpellier","Grenoble","Grenoble","Créteil","Aix-Marseille","Poitiers","Créteil","Lyon","Toulouse","Aix-Marseille","Poitiers","Orléans-Tours","Corse","Dijon","Grenoble","Toulouse","Toulouse","Montpellier","Clermont-Ferrand","Nantes","Toulouse","Nantes","Normandie","Rennes","Lille","Besançon","Nantes","Amiens","Versailles","Versailles","Orléans-Tours","Nantes","Nancy-Metz","Poitiers","Besançon")
departements$academie <- academie
require(sp)
?sp::merge
academie.dept <- departements%>%merge(academie.statistiques, by = "academie", duplicateGeoms = TRUE)
m <- leaflet(academie.dept)%>%addTiles("MapBox",
options = providerTileOptions(id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN')))
bins <- c(50, 60,70, 80, 90,100)
pal <- colorBin("YlOrRd", domain = academie.dept$Part_femmes, bins = bins)
labels <- sprintf(
"<strong>%s</strong><br/>%g%%",
academie.dept$nom, academie.dept$Part_femmes
) %>% lapply(htmltools::HTML)
m %>% addPolygons(fillColor = ~pal(Part_femmes),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
library(shiny)
library(leaflet)
library(maptools)
library(rgdal)
library(dplyr)
#france<-readOGR("LIMITE_DEPARTEMENT.shp", p4s = "+proj=longlat")
#mayotte<-readOGR("LIMITE_DEPARTEMENT_MAYOTTE.shp", p4s = "+proj=longlat")
#reunion<-readOGR("LIMITE_DEPARTEMENT_REUNION.shp", p4s = "+proj=longlat")
#guyane<-readOGR("LIMITE_DEPARTEMENT_GUYANE.shp", p4s = "+proj=longlat")
#guadeloupe<-readOGR("LIMITE_DEPARTEMENT_GUADELOUPE.shp", p4s = "+proj=longlat")
#martinique<-readOGR("LIMITE_DEPARTEMENT_MARTINIQUE.shp", p4s = "+proj=longlat")
#plot(france)
#points(2.349,48.853,pch=20,col="red",cex=2)
diplome.lp <- read.csv('fr-esr-insertion_professionnelle-lp.csv',
header = T,
sep = ';',
fill=TRUE,
encoding = "UTF-8")
diplome.master <- read.csv('fr-esr-insertion_professionnelle-master.csv',
header = T,
sep = ';',
fill=TRUE,
encoding = "UTF-8")
academie.lp <- diplome.lp%>%filter(Académie != "")%>%group_by(Académie)%>%summarise(Taux_dinsertion = median(as.numeric(Taux.d.insertion), na.rm = TRUE), Part_femmes = median(as.numeric(X..femmes), na.rm = TRUE), Taux_demplois_cadre = median(as.numeric(X..emplois.cadre), na.rm = TRUE), Taux_demplois_stables = median(as.numeric(X..emplois.stables), na.rm = TRUE), Taux_emploi_temps_plein = median(as.numeric(X..emplois.à.temps.plein), na.rm = TRUE))%>%rename(academie = Académie)%>%bind_cols(Diplome = rep("LP", 30))
academie.master <- diplome.master%>%filter(academie != "")%>%group_by(academie)%>%summarise(Taux_dinsertion = median(as.numeric(taux_dinsertion), na.rm = TRUE), Part_femmes = median(as.numeric(femmes), na.rm = TRUE), Taux_demplois_cadre = median(as.numeric(emplois_cadre), na.rm = TRUE), Taux_demplois_stables = median(as.numeric(emplois_stables), na.rm = TRUE), Taux_emploi_temps_plein = median(as.numeric(emplois_a_temps_plein), na.rm = TRUE))%>%bind_cols(Diplome = rep("Master", 30))
academie.statistiques <- bind_rows(academie.lp, academie.master)
departements <- geojsonio::geojson_read("departements.geojson", what = "sp")
#regions <- geojsonio::geojson_read("regions.geojson", what = "sp")
#class(departements)
#names(departements)
academie <- c("Amiens","Reims","Normandie","Clermont-Ferrand","Orléans-Tours","Rennes","Besançon","Bordeaux","Lyon","Orléans-Tours","Bordeaux","Nancy-Metz","Normandie","Lille","Clermont-Ferrand","Strasbourg","Strasbourg","Normandie","Dijon","Créteil","Aix-Marseille","Aix-Marseille","Grenoble","Reims","Toulouse","Poitiers","Limoges","Bordeaux","Normandie","Orléans-Tours","Montpellier","Dijon","Amiens","Bordeaux","Lyon","Dijon","Paris","Versailles","Toulouse","Toulouse","Nice","Nantes","Limoges","Nancy-Metz","Versailles","Clermont-Ferrand","Nice","Montpellier","Corse","Rennes","Limoges","Besançon","Rennes","Montpellier","Bordeaux","Orléans-Tours","Grenoble","Reims","Reims","Nancy-Metz","Toulouse","Montpellier","Grenoble","Grenoble","Créteil","Aix-Marseille","Poitiers","Créteil","Lyon","Toulouse","Aix-Marseille","Poitiers","Orléans-Tours","Corse","Dijon","Grenoble","Toulouse","Toulouse","Montpellier","Clermont-Ferrand","Nantes","Toulouse","Nantes","Normandie","Rennes","Lille","Besançon","Nantes","Amiens","Versailles","Versailles","Orléans-Tours","Nantes","Nancy-Metz","Poitiers","Besançon")
departements$academie <- academie
require(sp)
?sp::merge
academie.dept <- departements%>%merge(academie.statistiques, by = "academie", duplicateGeoms = TRUE)
m <- leaflet(academie.dept)%>%addTiles("MapBox",
options = providerTileOptions(id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN')))
bins <- c(50, 60,70, 80, 90,100)
pal <- colorBin("YlOrRd", domain = academie.dept$Part_femmes, bins = bins)
labels <- sprintf(
"<strong>%s</strong><br/>%g%%",
academie.dept$nom, academie.dept$Part_femmes
) %>% lapply(htmltools::HTML)
m %>% addPolygons(fillColor = ~pal(Part_femmes),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))%>% addLegend(pal = pal, values = ~Part_femmes, opacity = 0.7, title = NULL,position = "bottomright")
runApp('Dashboard')
runApp()
runApp('Dashboard')
runApp('Dashboard')
runApp('Dashboard')
